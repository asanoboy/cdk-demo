Resources:
  AppVpc80F1F7F9:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: AppStack/AppVpc
    Metadata:
      aws:cdk:path: AppStack/AppVpc/Resource
  AppVpcPublicSubnet1SubnetDD9E0A08:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.0.0/18
      VpcId:
        Ref: AppVpc80F1F7F9
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: AppStack/AppVpc/PublicSubnet1
    Metadata:
      aws:cdk:path: AppStack/AppVpc/PublicSubnet1/Subnet
  AppVpcPublicSubnet1RouteTable96CCB335:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: AppVpc80F1F7F9
      Tags:
        - Key: Name
          Value: AppStack/AppVpc/PublicSubnet1
    Metadata:
      aws:cdk:path: AppStack/AppVpc/PublicSubnet1/RouteTable
  AppVpcPublicSubnet1RouteTableAssociationAFB11A1C:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: AppVpcPublicSubnet1RouteTable96CCB335
      SubnetId:
        Ref: AppVpcPublicSubnet1SubnetDD9E0A08
    Metadata:
      aws:cdk:path: AppStack/AppVpc/PublicSubnet1/RouteTableAssociation
  AppVpcPublicSubnet1DefaultRouteC1B28749:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: AppVpcPublicSubnet1RouteTable96CCB335
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: AppVpcIGW826A76F0
    DependsOn:
      - AppVpcVPCGW1D33210A
    Metadata:
      aws:cdk:path: AppStack/AppVpc/PublicSubnet1/DefaultRoute
  AppVpcPublicSubnet1EIPF0BFE5AB:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: AppStack/AppVpc/PublicSubnet1
    Metadata:
      aws:cdk:path: AppStack/AppVpc/PublicSubnet1/EIP
  AppVpcPublicSubnet1NATGateway0D5C928D:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - AppVpcPublicSubnet1EIPF0BFE5AB
          - AllocationId
      SubnetId:
        Ref: AppVpcPublicSubnet1SubnetDD9E0A08
      Tags:
        - Key: Name
          Value: AppStack/AppVpc/PublicSubnet1
    Metadata:
      aws:cdk:path: AppStack/AppVpc/PublicSubnet1/NATGateway
  AppVpcPublicSubnet2SubnetDFE2ABB8:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.64.0/18
      VpcId:
        Ref: AppVpc80F1F7F9
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: AppStack/AppVpc/PublicSubnet2
    Metadata:
      aws:cdk:path: AppStack/AppVpc/PublicSubnet2/Subnet
  AppVpcPublicSubnet2RouteTable961D28F7:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: AppVpc80F1F7F9
      Tags:
        - Key: Name
          Value: AppStack/AppVpc/PublicSubnet2
    Metadata:
      aws:cdk:path: AppStack/AppVpc/PublicSubnet2/RouteTable
  AppVpcPublicSubnet2RouteTableAssociationD784754F:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: AppVpcPublicSubnet2RouteTable961D28F7
      SubnetId:
        Ref: AppVpcPublicSubnet2SubnetDFE2ABB8
    Metadata:
      aws:cdk:path: AppStack/AppVpc/PublicSubnet2/RouteTableAssociation
  AppVpcPublicSubnet2DefaultRoute66E67257:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: AppVpcPublicSubnet2RouteTable961D28F7
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: AppVpcIGW826A76F0
    DependsOn:
      - AppVpcVPCGW1D33210A
    Metadata:
      aws:cdk:path: AppStack/AppVpc/PublicSubnet2/DefaultRoute
  AppVpcPublicSubnet2EIPB481EFAF:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: AppStack/AppVpc/PublicSubnet2
    Metadata:
      aws:cdk:path: AppStack/AppVpc/PublicSubnet2/EIP
  AppVpcPublicSubnet2NATGatewayF1049000:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - AppVpcPublicSubnet2EIPB481EFAF
          - AllocationId
      SubnetId:
        Ref: AppVpcPublicSubnet2SubnetDFE2ABB8
      Tags:
        - Key: Name
          Value: AppStack/AppVpc/PublicSubnet2
    Metadata:
      aws:cdk:path: AppStack/AppVpc/PublicSubnet2/NATGateway
  AppVpcPrivateSubnet1Subnet191FA232:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.128.0/18
      VpcId:
        Ref: AppVpc80F1F7F9
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: AppStack/AppVpc/PrivateSubnet1
    Metadata:
      aws:cdk:path: AppStack/AppVpc/PrivateSubnet1/Subnet
  AppVpcPrivateSubnet1RouteTableEBC6D985:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: AppVpc80F1F7F9
      Tags:
        - Key: Name
          Value: AppStack/AppVpc/PrivateSubnet1
    Metadata:
      aws:cdk:path: AppStack/AppVpc/PrivateSubnet1/RouteTable
  AppVpcPrivateSubnet1RouteTableAssociation96B40FF1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: AppVpcPrivateSubnet1RouteTableEBC6D985
      SubnetId:
        Ref: AppVpcPrivateSubnet1Subnet191FA232
    Metadata:
      aws:cdk:path: AppStack/AppVpc/PrivateSubnet1/RouteTableAssociation
  AppVpcPrivateSubnet1DefaultRouteF1934EA6:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: AppVpcPrivateSubnet1RouteTableEBC6D985
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: AppVpcPublicSubnet1NATGateway0D5C928D
    Metadata:
      aws:cdk:path: AppStack/AppVpc/PrivateSubnet1/DefaultRoute
  AppVpcPrivateSubnet2Subnet9EA093CC:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.192.0/18
      VpcId:
        Ref: AppVpc80F1F7F9
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: AppStack/AppVpc/PrivateSubnet2
    Metadata:
      aws:cdk:path: AppStack/AppVpc/PrivateSubnet2/Subnet
  AppVpcPrivateSubnet2RouteTableD5D563B7:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: AppVpc80F1F7F9
      Tags:
        - Key: Name
          Value: AppStack/AppVpc/PrivateSubnet2
    Metadata:
      aws:cdk:path: AppStack/AppVpc/PrivateSubnet2/RouteTable
  AppVpcPrivateSubnet2RouteTableAssociationEF520DA2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: AppVpcPrivateSubnet2RouteTableD5D563B7
      SubnetId:
        Ref: AppVpcPrivateSubnet2Subnet9EA093CC
    Metadata:
      aws:cdk:path: AppStack/AppVpc/PrivateSubnet2/RouteTableAssociation
  AppVpcPrivateSubnet2DefaultRouteCBAB1884:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: AppVpcPrivateSubnet2RouteTableD5D563B7
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: AppVpcPublicSubnet2NATGatewayF1049000
    Metadata:
      aws:cdk:path: AppStack/AppVpc/PrivateSubnet2/DefaultRoute
  AppVpcIGW826A76F0:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: AppStack/AppVpc
    Metadata:
      aws:cdk:path: AppStack/AppVpc/IGW
  AppVpcVPCGW1D33210A:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: AppVpc80F1F7F9
      InternetGatewayId:
        Ref: AppVpcIGW826A76F0
    Metadata:
      aws:cdk:path: AppStack/AppVpc/VPCGW
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Modules: aws-cdk=1.88.0,@aws-cdk/assets=1.102.0,@aws-cdk/aws-cloudwatch=1.102.0,@aws-cdk/aws-ec2=1.102.0,@aws-cdk/aws-events=1.102.0,@aws-cdk/aws-iam=1.102.0,@aws-cdk/aws-kms=1.102.0,@aws-cdk/aws-logs=1.102.0,@aws-cdk/aws-s3=1.102.0,@aws-cdk/aws-s3-assets=1.102.0,@aws-cdk/aws-ssm=1.102.0,@aws-cdk/cloud-assembly-schema=1.102.0,@aws-cdk/core=1.102.0,@aws-cdk/cx-api=1.102.0,@aws-cdk/region-info=1.102.0,jsii-runtime=node.js/v14.15.4
    Metadata:
      aws:cdk:path: AppStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2

